?sample
sample(coinFlips, 100, replace = FALSE, prob = NULL)
coinFlips = c(0,1)
sample(coinFlips, 100, replace = FALSE, prob = NULL)
sample(coinFlips, 100, replace = TRUE, prob = NULL)
sample(coinFlips, 100, replace = TRUE, prob = NULL)
sample(coinFlips, 100, replace = TRUE, prob = NULL)
sample(coinFlips, 100, replace = TRUE, prob = NULL)
sample(coinFlips, 100, replace = TRUE, prob = NULL)
sample(coinFlips, 100000,
sample(coinFlips, 100000, replace = TRUE, prob = NULL)
asdf
sample(coinFlips, 10000, replace = TRUE, prob = NULL)
sample(coinFlips, 19999, replace = TRUE, prob = NULL)
sample(coinFlips, 100, replace = TRUE, prob = NULL)
max.iter = 1000
x = 0
steps=0
while(x<10){
x = x + sample(c(0,1),1)
steps = steps + 1
if (steps == max.iter){
warning("Maximum iteration reached")
break
}
}
x
flips = 1:100
for (x in length(flips)){
flipsVector[x] <- sample(coinFlips, 1, replace = TRUE, prob = NULL)
}
flips = 1:100
flipsVector = c()
for (x in length(flips)){
flipsVector[x] <- sample(coinFlips, 1, replace = TRUE, prob = NULL)
}
flipsVector
flipsVector = c()
flipsVector
flipsVector[1] = "H"
flipsVector
sample(coinFlips, 1, replace = TRUE, prob = NULL)
sample(coinFlips, 1, replace = TRUE, prob = NULL)
sample(coinFlips, 1, replace = TRUE, prob = NULL)
sample(coinFlips, 1, replace = TRUE, prob = NULL)
sample(coinFlips, 1, replace = TRUE, prob = NULL)
# HINT: Use the sample function.  NO LOOPS REQUIRED
?sample
coinFlips = c(0,1)
sample(coinFlips, 100, replace = TRUE, prob = NULL)
# 2.) Write a for loop to simulate the results of 100 coin flips. Use the print
# function to output your result at each stage of the loop.
flips = 1:100
flipsVector = c()
for (x in length(flips)){
flipsVector[x] <- sample(coinFlips, 1, replace = TRUE, prob = NULL)
}
flipsVector
flipsVector = c()
for (x in length(flips)){
flipsVector[x] <- sample(coinFlips, 1, replace = TRUE, prob = NULL)
print(flipsVector)
}
print(flipsVector)
flipsVector
# function to output your result at each stage of the loop.
flips = 1:100
flipsVector = c()
for (x in length(flips)){
flipsVector[x] <- sample(coinFlips, 1, replace = TRUE, prob = NULL)
print(flipsVector)
}
for (x in length(flips)){
flipsVector[x] <- sample(coinFlips, 1, replace = TRUE)
print(flipsVector)
}
flips = 1:100
flipsVector = c()
for (x in length(flips)){
flipsVector[x] <- sample(coinFlips, 1, replace = TRUE)
print(flipsVector)
}
flips
flipsVector = c()
flipsVector
flips = 1:100
flipsVector = c()
for (x in length(flips)){
flipsVector[x] <- sample(coinFlips, 1, replace = TRUE)
print(flipsVector)
}
flips = 1:100
flipsVector = c()
for (x in 1:length(flips)){
flipsVector[x] <- sample(coinFlips, 1, replace = TRUE)
print(flipsVector)
}
for (x in 1:length(flips)){
flipsVector[x] <- sample(coinFlips, 1, replace = TRUE)
print(flipsVector[x])
}
for (x in 1:length(flips)){
Flips[x] <- sample(coinFlips, 1, replace = TRUE)
print(Flips)
}
Flips = c()
for (x in 1:length(flips)){
Flips[x] <- sample(coinFlips, 1, replace = TRUE)
print(Flips)
}
HT<-c('Tails','Heads')
HT
Flips
Flips
OW.NHANES <- c(family["bmi"] > 25 & family["gender"] == "f" | family["bmi"] > 26 & family["gender"] == "m")
OW.NHANES
OW.NHANES
HT
HT[1]
HT[2]
Flips
HT[Flips]
HT[Flips+1]
Flips+1
HT[0]
HT[1]
HT[Flips+1]
set.seed(1)
set.seed(1)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if coinFlip == 1{
coinFlip = sample(coinFlips, 1, replace = TRUE)
coinFlip
set.seed(1)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
steps
#same result.
set.seed(1)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
print(steps)
#same result.
set.seed(1)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
print(steps)
#same result.
set.seed(1)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
print(steps)
set.seed(1)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
print(steps)
set.seed(1)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
print(steps)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
print(steps)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
print(steps)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
print(steps)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
print(steps)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
print(steps)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
print(steps)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
print(steps)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
print(steps)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
print(steps)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
print(steps)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
print(steps)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
print(steps)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
print(steps)
hcount = 0
steps = 0
while(hcount <= 50){
coinFlip = sample(coinFlips, 1, replace = TRUE)
if (coinFlip == 1){
hcount = hcount + 1
}
steps = steps + 1
}
print(steps)
